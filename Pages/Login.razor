@page "/Login"
@inject NavigationManager navMgr
@inject IAuthService authService
@using BlazorWASM.Services.ClientInterfaces

<link href="Login.razor.css" rel="stylesheet" type="text/css" />

<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3>Please login</h3>
            <div class="field">
                <label>Email :</label>
                <input type="text" @bind="email"/>
            </div>
             
            <div class="field">
                <label style="text-align: center">Password: </label>
                <input type="password" @bind="password"/>
            </div>
            @if (!string.IsNullOrEmpty(errorLabel))
            {
                <div class="field">
                    <label style="color: red">
                        @errorLabel
                    </label>
                </div>
            }
            <div class="field">
                <button class="loginbtn" @onclick="LoginAsync">Log in</button>
            </div>
            <div class="field">
                <button class="loginbtn" @onclick="Register">Sign up</button>
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private string email;
    private string password;
    private string errorLabel;

    private async Task LoginAsync()
    {
        errorLabel = "";
        if (checkInfo())
        {
            try
            {
                await authService.LoginAsync(email, password);
                navMgr.NavigateTo("/");
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                errorLabel = $"Error: {e.Message}";
            }
        }
        else
        {
            errorLabel = "Wrong email or password";
        }
    }
    
    private void Register()
    {
        navMgr.NavigateTo("/Register");
    }

    public bool checkInfo()
    {
        if (!(email.Equals("") || password.Equals("") || password.Length < 5))
        {
            return true;
        }

        return false;
    }

}